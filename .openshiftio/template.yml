kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: Plantilla GO
  namespace: brandon-daniel-jaime-castillo-dev
  annotations:
    description: Building a go project
    iconClass: icon-golang
    tags: 'go, golang'
    template.openshift.io/bindable: 'false'
    template.openshift.io/provider-display-name: 'Red Hat, Inc.'
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      ports:
        - name: http
          port: 8080
      selector:
        app: '${APPLICATION_NAME}'
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      port:
        targetPort: 8080
      to:
        kind: Service
        name: '${APPLICATION_NAME}'
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: '${APPLICATION_NAME}-go-builder'
      labels:
        app: '${APPLICATION_NAME}'
    spec: {}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      name: '${APPLICATION_NAME}-go-builder'
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: '${APPLICATION_NAME}-go-builder:latest'
      postCommit: {}
      resources: {}
      source:
        git:
          uri: '${SOURCE_REPOSITORY_URL}'
          ref: '${SOURCE_REPOSITORY_REF}'
        contextDir: '${SOURCE_REPOSITORY_DIR}'
        type: git
      strategy:
        dockerStrategy: 
          dockerfilePath: Dockerfile
        type: Docker
      runPolicy: Serial
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChange: {}
        - type: ImageChange
          imageChange:
            from:
              kind: ImageStreamTag
              name: '${APPLICATION_NAME}-go-builder:latest'
    status:
      lastVersion: 0
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: '${APPLICATION_NAME}'
        app.openshift.io/runtime: golang
      name: '${APPLICATION_NAME}'
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        app: '${APPLICATION_NAME}'
      strategy:
        rollingParams: null
        type: Rolling
      template:
        metadata:
          labels:
            app: '${APPLICATION_NAME}'
        spec:
          containers:
            - image: '${APPLICATION_NAME}-go-builder:latest'
              imagePullPolicy: Always
              name: '${APPLICATION_NAME}-go'
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - '${APPLICATION_NAME}-go'
            from:
              kind: ImageStreamTag
              name: '${APPLICATION_NAME}-go-builder:latest'
parameters: 
  - name: SOURCE_REPOSITORY_URL
    displayName: Source URL
    description: The source URL for the application
    value: 'https://github.com/branddcast/rfc.git'
    required: true
  - name: SOURCE_REPOSITORY_REF
    displayName: Source Branch
    description: The branch name for the application
    value: master
    required: true
  - name: APPLICATION_NAME
    displayName: Name
    description: The name for the application
    value: rfc-go
    required: true
  - name: SOURCE_REPOSITORY_DIR
    displayName: Source Directory
    description: The location within the source repo of the application
    value: .
    required: true